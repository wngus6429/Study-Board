/**
 * 🔑 로그인 데이터 전송 객체 (Signin User DTO)
 *
 * 사용자 로그인 시 클라이언트에서 서버로 전송되는 데이터의 구조와 유효성 검증 규칙을 정의합니다.
 *
 * 주요 기능:
 * - 로그인 필수 정보 정의 (이메일, 비밀번호)
 * - 입력 데이터 유효성 검증 (형식, 길이, 패턴)
 * - 보안을 위한 데이터 검증 규칙
 * - 한국어 에러 메시지 제공 (사용자 친화적)
 *
 * 유효성 검증 규칙:
 * - 이메일: RFC 표준 이메일 형식, 4-30자
 * - 비밀번호: 4-20자, 영숫자 및 특수문자 허용
 *
 * @note
 * 로그인용 DTO는 회원가입용 DTO와 달리 특수문자가 포함된 비밀번호를 허용합니다.
 * 이는 기존 사용자들이 특수문자가 포함된 비밀번호를 사용할 수 있기 때문입니다.
 *
 * @author Study-Board Team
 * @version 1.0.0
 */

import { IsNotEmpty, Matches, MaxLength, MinLength } from 'class-validator';
import { Entity } from 'typeorm';

// 로그인 데이터 유효성 검증 클래스
@Entity()
export class SigninUserDto {
  // ═══════════════════════════════════════════════════════════════════════════════════════
  // 📧 이메일 주소 (로그인 ID)
  // ═══════════════════════════════════════════════════════════════════════════════════════

  /**
   * 사용자 이메일 주소
   *
   * @description
   * - 로그인 시 사용되는 고유 식별자
   * - 회원가입 시 등록한 이메일과 동일해야 함
   * - RFC 표준 이메일 형식 검증
   *
   * @validation
   * - 필수 입력: 이메일을 반드시 입력해야 함
   * - 최소 길이: 4자 이상 (예: a@b.c)
   * - 최대 길이: 30자 이하 (긴 이메일 주소 제한)
   * - 형식 검증: 표준 이메일 패턴 매칭
   *
   * @example "user@example.com", "test@gmail.com"
   * @error "올바른 이메일 형식이 아닙니다."
   */
  @IsNotEmpty({ message: '이메일을 입력해주세요.' })
  @MinLength(4, { message: '이메일은 최소 4자 이상 입력해야 합니다.' })
  @MaxLength(30, { message: '이메일은 최대 30자까지 입력 가능합니다.' })
  @Matches(/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/, {
    message: '올바른 이메일 형식이 아닙니다.',
  })
  user_email: string;

  // ═══════════════════════════════════════════════════════════════════════════════════════
  // 🔒 비밀번호 (보안 인증)
  // ═══════════════════════════════════════════════════════════════════════════════════════

  /**
   * 사용자 비밀번호
   *
   * @description
   * - 로그인 시 사용되는 인증 정보
   * - 회원가입 시 설정한 비밀번호와 일치해야 함
   * - 서버에서 해시된 비밀번호와 비교 검증
   *
   * @validation
   * - 필수 입력: 비밀번호를 반드시 입력해야 함
   * - 최소 길이: 4자 이상 (보안 최소 요구사항)
   * - 최대 길이: 20자 이하 (과도한 길이 제한)
   * - 허용 문자: 영문 대/소문자, 숫자, 특수문자(!@#$%^&*)
   *
   * @security
   * - 평문으로 전송되지만 HTTPS 사용 권장
   * - 서버에서 bcrypt 등으로 해시 비교
   * - 로그에 비밀번호가 출력되지 않도록 주의
   *
   * @example "password123", "myPass!@#", "secure456"
   * @error "비밀번호는 영어 대/소문자, 숫자, 특수문자(!@#$%^&*)만 사용할 수 있습니다."
   */
  @IsNotEmpty({ message: '비밀번호를 입력해주세요.' })
  @MinLength(4, { message: '비밀번호는 최소 4자 이상 입력해야 합니다.' })
  @MaxLength(20, { message: '비밀번호는 최대 20자까지 입력 가능합니다.' })
  @Matches(/^[A-Za-z0-9!@#$%^&*]*$/, {
    message:
      '비밀번호는 영어 대/소문자, 숫자, 특수문자(!@#$%^&*)만 사용할 수 있습니다.',
  })
  password: string;
}
